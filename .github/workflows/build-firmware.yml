name: Build Firmware
run-name: Build Firmware üèéÔ∏è
on:
  push:
    paths: ['firmware/**']

defaults:
  run:
    working-directory:
      ./firmware/

env:
  CARGO_TERM_COLOR: always

jobs:
  build-firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code  # needs to be first for working-directory to succeed
        uses: actions/checkout@v4

      - name: Setup rust
        run: |
          rustup toolchain install nightly --profile minimal --target riscv32imc-unknown-none-elf
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu clippy

      - name: Build firmware
        run: cargo build --release

      - name: Run fmt
        run: cargo fmt --check

      - name: Run clippy
        run: cargo clippy --release --no-deps

      # This step does not respect working-directory
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: ./firmware/target/riscv32imc-unknown-none-elf/release/firmware
